'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FoodShop")>  _
Partial Public Class FoodShopDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCustomer(instance As Customer)
    End Sub
  Partial Private Sub UpdateCustomer(instance As Customer)
    End Sub
  Partial Private Sub DeleteCustomer(instance As Customer)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.VisualBasicAssignment.My.MySettings.Default.FoodShopConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Customers() As System.Data.Linq.Table(Of Customer)
		Get
			Return Me.GetTable(Of Customer)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Customer")>  _
Partial Public Class Customer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _user_id As System.Nullable(Of Integer)
	
	Private _birthday_date As System.Nullable(Of Date)
	
	Private _membership_id As System.Nullable(Of Integer)
	
	Private _wallate_amount As System.Nullable(Of Double)
	
	Private _cust_name As String
	
	Private _cust_email As String
	
	Private _cust_password As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onuser_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onuser_idChanged()
    End Sub
    Partial Private Sub Onbirthday_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onbirthday_dateChanged()
    End Sub
    Partial Private Sub Onmembership_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmembership_idChanged()
    End Sub
    Partial Private Sub Onwallate_amountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onwallate_amountChanged()
    End Sub
    Partial Private Sub Oncust_nameChanging(value As String)
    End Sub
    Partial Private Sub Oncust_nameChanged()
    End Sub
    Partial Private Sub Oncust_emailChanging(value As String)
    End Sub
    Partial Private Sub Oncust_emailChanged()
    End Sub
    Partial Private Sub Oncust_passwordChanging(value As String)
    End Sub
    Partial Private Sub Oncust_passwordChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_id", DbType:="Int")>  _
	Public Property user_id() As System.Nullable(Of Integer)
		Get
			Return Me._user_id
		End Get
		Set
			If (Me._user_id.Equals(value) = false) Then
				Me.Onuser_idChanging(value)
				Me.SendPropertyChanging
				Me._user_id = value
				Me.SendPropertyChanged("user_id")
				Me.Onuser_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_birthday_date", DbType:="Date")>  _
	Public Property birthday_date() As System.Nullable(Of Date)
		Get
			Return Me._birthday_date
		End Get
		Set
			If (Me._birthday_date.Equals(value) = false) Then
				Me.Onbirthday_dateChanging(value)
				Me.SendPropertyChanging
				Me._birthday_date = value
				Me.SendPropertyChanged("birthday_date")
				Me.Onbirthday_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_membership_id", DbType:="Int")>  _
	Public Property membership_id() As System.Nullable(Of Integer)
		Get
			Return Me._membership_id
		End Get
		Set
			If (Me._membership_id.Equals(value) = false) Then
				Me.Onmembership_idChanging(value)
				Me.SendPropertyChanging
				Me._membership_id = value
				Me.SendPropertyChanged("membership_id")
				Me.Onmembership_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wallate_amount", DbType:="Float")>  _
	Public Property wallate_amount() As System.Nullable(Of Double)
		Get
			Return Me._wallate_amount
		End Get
		Set
			If (Me._wallate_amount.Equals(value) = false) Then
				Me.Onwallate_amountChanging(value)
				Me.SendPropertyChanging
				Me._wallate_amount = value
				Me.SendPropertyChanged("wallate_amount")
				Me.Onwallate_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_name", DbType:="VarChar(30) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property cust_name() As String
		Get
			Return Me._cust_name
		End Get
		Set
			If (String.Equals(Me._cust_name, value) = false) Then
				Me.Oncust_nameChanging(value)
				Me.SendPropertyChanging
				Me._cust_name = value
				Me.SendPropertyChanged("cust_name")
				Me.Oncust_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_email", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property cust_email() As String
		Get
			Return Me._cust_email
		End Get
		Set
			If (String.Equals(Me._cust_email, value) = false) Then
				Me.Oncust_emailChanging(value)
				Me.SendPropertyChanging
				Me._cust_email = value
				Me.SendPropertyChanged("cust_email")
				Me.Oncust_emailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_password", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property cust_password() As String
		Get
			Return Me._cust_password
		End Get
		Set
			If (String.Equals(Me._cust_password, value) = false) Then
				Me.Oncust_passwordChanging(value)
				Me.SendPropertyChanging
				Me._cust_password = value
				Me.SendPropertyChanged("cust_password")
				Me.Oncust_passwordChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
